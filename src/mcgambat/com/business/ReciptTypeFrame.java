/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mcgambat.com.business;

import java.sql.Timestamp;
import mcgambat.com.daoImpl.ReciptTypeDAOImpl;
import mcgambat.com.models.ReciptTypeModel;
import mcgambat.com.utility.CommonMethods;

/**
 *
 * @author Lenovo
 */
public class ReciptTypeFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReciptTypeFrame
     */
    Integer reciptId;
    Timestamp currentDate = new Timestamp(System.currentTimeMillis());
    public ReciptTypeFrame() {
        initComponents();
        fillReciptTypeTable();
        this.setLocationRelativeTo(null);
        disableButtons(1);
        clearAllFields();
        reciptTypeField.requestFocus();
        this.setExtendedState(ReciptTypeFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        incomeSearchField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        reciptTypeTable = new javax.swing.JTable();
        addRecipt = new javax.swing.JLabel();
        updateRecipt = new javax.swing.JLabel();
        resetButton = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        reciptTypeField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        jMenuItem1.setText("Delete Record");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Recipt type");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 50, -1, 50));

        incomeSearchField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        incomeSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeSearchFieldActionPerformed(evt);
            }
        });
        incomeSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                incomeSearchFieldKeyReleased(evt);
            }
        });
        jPanel2.add(incomeSearchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 60, 270, 30));

        reciptTypeTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        reciptTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reciptTypeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reciptTypeTable.setRowHeight(20);
        reciptTypeTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        reciptTypeTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        reciptTypeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reciptTypeTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                reciptTypeTableMouseReleased(evt);
            }
        });
        reciptTypeTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reciptTypeTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(reciptTypeTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 110, 850, 540));

        addRecipt.setBackground(new java.awt.Color(53, 168, 83));
        addRecipt.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        addRecipt.setForeground(new java.awt.Color(255, 255, 255));
        addRecipt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addRecipt.setText("Add Recipt");
        addRecipt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addRecipt.setOpaque(true);
        addRecipt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addReciptMouseClicked(evt);
            }
        });
        jPanel2.add(addRecipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 138, 34));

        updateRecipt.setBackground(new java.awt.Color(53, 168, 83));
        updateRecipt.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        updateRecipt.setForeground(new java.awt.Color(255, 255, 255));
        updateRecipt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateRecipt.setText("Update Recipt");
        updateRecipt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateRecipt.setOpaque(true);
        updateRecipt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateReciptMouseClicked(evt);
            }
        });
        jPanel2.add(updateRecipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 152, 34));

        resetButton.setBackground(new java.awt.Color(53, 168, 83));
        resetButton.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resetButton.setText("Reset");
        resetButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetButton.setOpaque(true);
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        jPanel2.add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 330, 30));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Recipt Type");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 120, 30));

        reciptTypeField.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel2.add(reciptTypeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 240, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 62, 1370, 690));

        jPanel1.setBackground(new java.awt.Color(53, 168, 83));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Recipt Type");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(550, 550, 550)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 556, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 60));

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Add");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Update");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Delete");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Reset");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Back");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Exit");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incomeSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeSearchFieldActionPerformed

    }//GEN-LAST:event_incomeSearchFieldActionPerformed

    private void incomeSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_incomeSearchFieldKeyReleased
        CommonMethods.searchFromTable(reciptTypeTable,incomeSearchField);
    }//GEN-LAST:event_incomeSearchFieldKeyReleased

    private void reciptTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reciptTypeTableMouseClicked
        getSelectedRow();
    }//GEN-LAST:event_reciptTypeTableMouseClicked

    private void reciptTypeTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reciptTypeTableMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(reciptTypeTable, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_reciptTypeTableMouseReleased

    private void addReciptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addReciptMouseClicked
        addRecipt();
    }//GEN-LAST:event_addReciptMouseClicked

    private void updateReciptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateReciptMouseClicked
        updateRecipt();
    }//GEN-LAST:event_updateReciptMouseClicked

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        clearAllFields();
        disableButtons(1);
    }//GEN-LAST:event_resetButtonMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked

    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(addRecipt.isEnabled()){
            addRecipt();
        }else{
            new MessageForm("Error", "Add button is disabled try reset then add record.", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if(updateRecipt.isEnabled()){
            updateRecipt();
        }else{
            new MessageForm("Error", "Please select any record to update.", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        deleteRecipt();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        deleteRecipt();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void reciptTypeTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reciptTypeTableKeyReleased
        if(evt.getKeyCode()==38 || evt.getKeyCode()==40)
        {
            getSelectedRow();
        }
        else if(evt.getKeyCode()==37)
        {
            reciptTypeField.requestFocus();
        }
    }//GEN-LAST:event_reciptTypeTableKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReciptTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReciptTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReciptTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReciptTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReciptTypeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addRecipt;
    private javax.swing.JTextField incomeSearchField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField reciptTypeField;
    private javax.swing.JTable reciptTypeTable;
    private javax.swing.JLabel resetButton;
    private javax.swing.JLabel updateRecipt;
    // End of variables declaration//GEN-END:variables

    private void fillReciptTypeTable() {
        CommonMethods.fillTables(new ReciptTypeDAOImpl().viewAllReciptTypes(), reciptTypeTable, jScrollPane2, this);
    }

    private void disableButtons(int i) {
        if(i==1)
        {
            addRecipt.setEnabled(true);
            updateRecipt.setEnabled(false);
        }else if(i==0){
            addRecipt.setEnabled(false);
            updateRecipt.setEnabled(true);            
        }
    }

    private void clearAllFields() {
      disableButtons(1);
      reciptTypeField.setText("");
      reciptTypeTable.clearSelection();
    }

    private void addRecipt() {
        if(!reciptTypeField.getText().trim().equals("") && addRecipt.isEnabled())
        {
            String reciptType = reciptTypeField.getText();
            ReciptTypeModel reciptTypeModel = new ReciptTypeModel();
            reciptTypeModel.setReciptType(reciptType);
            reciptTypeModel.setCreatedDate(currentDate);
            reciptTypeModel.setModifiedDate(currentDate);
            Integer result = new ReciptTypeDAOImpl().addReciptType(reciptTypeModel);
           if(result<0)
           {
               new MessageForm("Error", "Record could not be added try again.","error.png").setVisible(true); 
           }else{
               new MessageForm("Success", "Record has been added successfully.","info.png").setVisible(true);
               fillReciptTypeTable();
               clearAllFields();
           }
        }else{
            new MessageForm("Error", "Please fill all fields.", "error.png").setVisible(true);
        }
    }

    private void updateRecipt() {
        if(reciptTypeTable.getSelectedRow()>-1 && !reciptTypeField.getText().trim().equals("") && updateRecipt.isEnabled())
        {
            String reciptType = reciptTypeField.getText();
            Integer reciptTypeId = (Integer) reciptTypeTable.getValueAt(reciptTypeTable.getSelectedRow(), 0);
            ReciptTypeModel reciptTypeModel = new ReciptTypeModel();
            reciptTypeModel.setReciptType(reciptType);
            reciptTypeModel.setCreatedDate(currentDate);
            reciptTypeModel.setModifiedDate(currentDate);
            reciptTypeModel.setReciptTypeId(reciptTypeId);
            Integer result = new ReciptTypeDAOImpl().updateReciptType(reciptTypeModel);
            if(result<0)
            {
                new MessageForm("Error", "Record could not be updated try again.","error.png").setVisible(true); 
            }else{
                new MessageForm("Success", "Record has been updated successfully.","info.png").setVisible(true);
                fillReciptTypeTable();
                clearAllFields();
            }
         }else{
             new MessageForm("Error", "Please fill all fields.", "error.png").setVisible(true);
         }
    }

    private void deleteRecipt() {
        if(reciptTypeTable.getSelectedRow()>-1)
        {
            Integer reciptTypeId = (Integer) reciptTypeTable.getValueAt(reciptTypeTable.getSelectedRow(), 0);
            ReciptTypeModel reciptTypeModel = new ReciptTypeModel();
            reciptTypeModel.setModifiedDate(currentDate);
            reciptTypeModel.setReciptTypeId(reciptTypeId);
            Integer result = new ReciptTypeDAOImpl().deleteReciptTypeById(reciptTypeModel);
            if(result<0)
            {
                new MessageForm("Error", "Record could not be deleted try again.","error.png").setVisible(true); 
            }else{
                new MessageForm("Success", "Record has been deleted successfully.","info.png").setVisible(true);
                fillReciptTypeTable();
                clearAllFields();
            }
         }else{
             new MessageForm("Error", "Please select a row to delete.", "error.png").setVisible(true);
         }
    }

    private void getSelectedRow() {
        if (reciptTypeTable.getSelectedRow() > -1) {
            reciptId = (Integer) reciptTypeTable.getValueAt(reciptTypeTable.getSelectedRow(), 0);
            String reciptType = (String) reciptTypeTable.getValueAt(reciptTypeTable.getSelectedRow(), 1);
            reciptTypeField.setText(reciptType);
            disableButtons(0);
        }
    }
}
