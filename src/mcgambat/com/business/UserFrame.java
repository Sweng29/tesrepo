/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mcgambat.com.business;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import mcgambat.com.daoImpl.UserDaoImpl;
import mcgambat.com.models.UserModel;
import mcgambat.com.utility.CommonMethods;

/**
 *
 * @author Rehan Ali Azeemi
 */
public class UserFrame extends javax.swing.JFrame {

    UserDaoImpl userDaoImpl = null;

    /**
     * Creates new form EmployeesFrame
     */
    public UserFrame() {
        initComponents();
        userDaoImpl = new UserDaoImpl();
        this.setLocationRelativeTo(null);
        fillDataIntoUserTable();
        updateEmployee.setEnabled(false);
        userUsername.requestFocus();
    }

    private void fillDataIntoUserTable() {
        CommonMethods.fillTables(userDaoImpl.getAllUsers(), employeeTable, jScrollPane2, this);
    }

    private void addUser() {
        if (!userUsername.getText().equals("") && !userPassword.getText().equals("")) {
            String username = userUsername.getText().trim();
            String password = userPassword.getText().trim();

            UserModel userModel = new UserModel();

            userModel.setUsername(username);
            userModel.setPassword(password);

            int status = userDaoImpl.addUser(userModel);

            if (status == 1) {
                fillDataIntoUserTable();
                //   new MessageForm("Information", "Record Added", "info.png").setVisible(true);
                clearFields();
            } else {
                new MessageForm("Error", "Error", "error.png").setVisible(true);
            }
        }
        else{
        new MessageForm("Error", "Please fill all required fields", "error.png").setVisible(true);
    }
    }

    private void updateUser(Integer id) {
        if (!userUsername.getText().equals("")) {
            String username = userUsername.getText().trim();
            UserModel userModel = new UserModel();
            userModel.setUserId(id);
            userModel.setUsername(username);

            int status = userDaoImpl.updateUser(userModel);

            if (status == 1) {
                fillDataIntoUserTable();
                //  new MessageForm("Information", "Record Updated", "info.png").setVisible(true);
                clearFields();
            } else {
                new MessageForm("Error", "Error", "error.png").setVisible(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        deleteEmployee = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        employeeSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        userUsername = new javax.swing.JTextField();
        userPassword = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        addEmployee = new javax.swing.JLabel();
        updateEmployee = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        deleteEmployee.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        deleteEmployee.setText("Delete User");
        deleteEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteEmployee);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(53, 168, 83));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Users");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(525, 525, 525)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 581, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Users");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 40, -1, 26));

        employeeSearch.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        employeeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeSearchActionPerformed(evt);
            }
        });
        employeeSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                employeeSearchKeyReleased(evt);
            }
        });
        jPanel2.add(employeeSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, 220, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Username");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Password");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        userUsername.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(userUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 188, -1));

        userPassword.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jPanel2.add(userPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 188, -1));

        employeeTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employeeTable.setRowHeight(20);
        employeeTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        employeeTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                employeeTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(employeeTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 75, 980, 580));

        addEmployee.setBackground(new java.awt.Color(53, 168, 83));
        addEmployee.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        addEmployee.setForeground(new java.awt.Color(255, 255, 255));
        addEmployee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addEmployee.setText("Add User");
        addEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addEmployee.setOpaque(true);
        addEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addEmployeeMouseClicked(evt);
            }
        });
        jPanel2.add(addEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 138, 34));

        updateEmployee.setBackground(new java.awt.Color(53, 168, 83));
        updateEmployee.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        updateEmployee.setForeground(new java.awt.Color(255, 255, 255));
        updateEmployee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateEmployee.setText("Update User");
        updateEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateEmployee.setOpaque(true);
        updateEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateEmployeeMouseClicked(evt);
            }
        });
        jPanel2.add(updateEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 152, 34));

        jLabel10.setBackground(new java.awt.Color(53, 168, 83));
        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Reset");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.setOpaque(true);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 300, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 690));

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Add");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Update");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Delete");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Reset");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Back");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void employeeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeSearchActionPerformed
        // TODO add your handlinguserUsername}//GEN-LAST:event_employeeSearchActionPerformed
    }

    private void clearFields() {
        userUsername.setText("");
        userPassword.setText("");
        employeeTable.clearSelection();
        addEmployee.setEnabled(true);
        userPassword.setEditable(true);
        updateEmployee.setEnabled(false);
    }

    private void employeeSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeSearchKeyReleased

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked

    }//GEN-LAST:event_jPanel2MouseClicked


    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        addEmployee.setEnabled(false);
        updateEmployee.setEnabled(true);
        userPassword.setEditable(false);
        int selectedRow = employeeTable.getSelectedRow();

        if (selectedRow > -1) {
            String username = (String) employeeTable.getValueAt(employeeTable.getSelectedRow(), 1);

            userUsername.setText(username);
            userPassword.setText("");
        }


    }//GEN-LAST:event_employeeTableMouseClicked

    private boolean checkAvailbilityForUpdate(Integer row) {
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            if (row != i) {
                if (userUsername.getText().equals(employeeTable.getValueAt(i, 1))) {
                    return false;
                }
            }
        }

        return true;
    }

    private void updateEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateEmployeeMouseClicked
        if (updateEmployee.isEnabled()) {
            int row = employeeTable.getSelectedRow();
            if (row > -1) {

                Integer id = (Integer) employeeTable.getValueAt(row, 0);

                if (id > -1) {
                    String username = userUsername.getText();
                    if (!username.equals("") && checkAvailbilityForUpdate(row)) {
                        updateUser(id);
                    } else {
                        new MessageForm("Error", "Username should be unique", "error.png").setVisible(true);
                    }

                } else {
                    new MessageForm("Error", "Please select record", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Please select record", "error.png").setVisible(true);
            }
        }
    }//GEN-LAST:event_updateEmployeeMouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        clearFields();
        
    }//GEN-LAST:event_jLabel10MouseClicked

    private void deleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeActionPerformed
        Integer row = employeeTable.getSelectedRow();

        if (row > -1) {
            Integer id = (Integer) employeeTable.getValueAt(employeeTable.getSelectedRow(), 0);
            if (id == LoginFrame.userModel.getUserId()) {
                int option = JOptionPane.showConfirmDialog(null, "If you delete yourself you will be logged out");
                if (option == JOptionPane.YES_OPTION) {
                    deleteEmployee(id);
                    new LoginFrame().setVisible(true);
                    this.dispose();
                }
            } else {
                deleteEmployee(id);
            }
        } else {
            new MessageForm("Error", "Please select record", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_deleteEmployeeActionPerformed

    private void employeeTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(employeeTable, evt.getX(), evt.getY());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_employeeTableMouseReleased

    private void addEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEmployeeMouseClicked
        if(addEmployee.isEnabled()){
        String username = userUsername.getText();
        if (!username.equals("") && userDaoImpl.checkUsernameAvailbility(username)) {
            addUser();
        } else {
            new MessageForm("Error", "Username should be unique", "error.png").setVisible(true);
        }
        }
    }//GEN-LAST:event_addEmployeeMouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (updateEmployee.isEnabled()) {
            int row = employeeTable.getSelectedRow();
            if (row > -1) {

                Integer id = (Integer) employeeTable.getValueAt(row, 0);

                if (id > -1) {
                    String username = userUsername.getText();
                    if (!username.equals("") && checkAvailbilityForUpdate(row)) {
                        updateUser(id);
                    } else {
                        new MessageForm("Error", "Username should be unique", "error.png").setVisible(true);
                    }

                } else {
                    new MessageForm("Error", "Please select record", "error.png").setVisible(true);
                }
            } else {
                new MessageForm("Error", "Please select record", "error.png").setVisible(true);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        clearFields();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Integer row = employeeTable.getSelectedRow();

        if (row > -1) {
            Integer id = (Integer) employeeTable.getValueAt(employeeTable.getSelectedRow(), 0);
            if (id == LoginFrame.userModel.getUserId()) {
                int option = JOptionPane.showConfirmDialog(null, "If you delete yourself you will be logged out");
                if (option == JOptionPane.YES_OPTION) {
                    deleteEmployee(id);
                    new LoginFrame().setVisible(true);
                    this.dispose();
                }
            } else {
                deleteEmployee(id);
            }
        } else {
            new MessageForm("Error", "Please select record", "error.png").setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(addEmployee.isEnabled()){
        String username = userUsername.getText();
        if (!username.equals("") && userDaoImpl.checkUsernameAvailbility(username)) {
            addUser();
        } else {
            new MessageForm("Error", "Username should be unique", "error.png").setVisible(true);
        }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void deleteEmployee(Integer id) {
        int status = userDaoImpl.deleteUser(id);

        if (status == 1) {
            fillDataIntoUserTable();
            //   new MessageForm("Information", "Record Deleted", "info.png").setVisible(true);
            clearFields();
        } else {
            new MessageForm("Error", "Error", "error.png").setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addEmployee;
    private javax.swing.JMenuItem deleteEmployee;
    private javax.swing.JTextField employeeSearch;
    private javax.swing.JTable employeeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel updateEmployee;
    private javax.swing.JPasswordField userPassword;
    private javax.swing.JTextField userUsername;
    // End of variables declaration//GEN-END:variables
}
